{"version":3,"sources":["components/header.js","logic/tile.js","constant.js","logic/assert.js","logic/input.js","components/game.js","logic/hook/moveTile.js","App.js","reportWebVitals.js","index.js"],"names":["Header","getNewTileSet","tileSet","tile1","makeTile","push","tile2","checkTileCollision","tile","some","item","x","y","getInteger","value","isNew","isMerged","isDisabled","from","to","Math","floor","random","moveTile","condition","message","Error","assert","isMoveY","isMinus","sorted","map","filter","sort","a","b","res","initialPos","pos","i","length","nextPos","newtileSet","observerMap","addKeyObserver","key","callback","hotkeys","executeCallback","removekeyObserver","GridSlot","className","Game","props","useState","setTileContext","useEffect","moveAndAdd","newTileSet","newTile","moveLeft","moveRight","moveUp","moveDown","useMoveTile","staticGridContainer","times","j","dynamicTileContainer","matchItems","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.553bf755.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Header() {\r\n    return (\r\n        <div>\r\n            <h1>2028 Game</h1>\r\n        </div>\r\n    )\r\n}\r\n","import { GridSize } from \"../constant\";\r\nimport { assert } from './assert';\r\n\r\n//export var Tile = {};\r\n\r\nexport function getNewTileSet() {\r\n//Tile.getNewTileSet = function() {\r\n    let tileSet = []\r\n\r\n    let tile1 = makeTile(tileSet);\r\n    tileSet.push(tile1);\r\n\r\n    let tile2 = makeTile(tileSet);\r\n    tileSet.push(tile2);\r\n\r\n    return tileSet;\r\n}\r\n\r\nexport function checkTileCollision(tileSet, tile) {\r\n//Tile.checkTileCollision = function(tileSet, tile) {\r\n    return tileSet.some((item) => item.x === tile.x && item.y === tile.y)\r\n}\r\n\r\nexport function makeTile(tileSet) {\r\n//Tile.makeTile = function(tileSet) {\r\n    let tile;\r\n\r\n    while (!tile || (tileSet && checkTileCollision(tileSet, tile))) {\r\n        tile = {\r\n            x: getInteger(1, GridSize),\r\n            y: getInteger(1, GridSize),\r\n            value: 2,\r\n            isNew: true,\r\n            isMerged: false,\r\n            isDisabled: false,\r\n        }\r\n    }\r\n\r\n    return tile;\r\n}\r\n\r\nexport function getInteger(from, to) {\r\n//Tile.getInteger = function(from, to) {\r\n    return Math.floor(Math.random() * to + from);\r\n}\r\n\r\nexport function moveTile({ tileSet, x, y }) {\r\n    assert(x === 0 || y === 0, '');\r\n    const isMoveY = y !== 0;\r\n    const isMinus = x + y < 0;\r\n    const sorted = tileSet\r\n      .map(item => ({ ...item, isMerged: false, isNew: false }))\r\n      .filter(item => !item.isDisabled)\r\n      .sort((a, b) => {\r\n        const res = isMoveY ? a.x - b.x : a.y - b.y;\r\n        if (res) {\r\n          return res;\r\n        } else {\r\n          if (isMoveY) {\r\n            return isMinus ? a.y - b.y : b.y - a.y;\r\n          } else {\r\n            return isMinus ? a.x - b.x : b.x - a.x;\r\n          }\r\n        }\r\n      });\r\n    const initialPos = isMinus ? 1 : GridSize;\r\n    let pos = initialPos;\r\n    for (let i = 0; i < sorted.length; i++) {\r\n      if (isMoveY) {\r\n        sorted[i].y = pos;\r\n        pos = isMinus ? pos + 1 : pos - 1;\r\n        if (sorted[i].x !== sorted[i + 1]?.x) {\r\n          pos = initialPos;\r\n        }\r\n      } else {\r\n        sorted[i].x = pos;\r\n        pos = isMinus ? pos + 1 : pos - 1;\r\n        if (sorted[i].y !== sorted[i + 1]?.y) {\r\n          pos = initialPos;\r\n        }\r\n      }\r\n    }\r\n  \r\n    let nextPos = 0;\r\n    const newtileSet = [...sorted];\r\n    for (let i = 0; i < sorted.length; i++) {\r\n      if (sorted[i].isDisabled) {\r\n        continue;\r\n      }\r\n  \r\n      if (\r\n        nextPos &&\r\n        (isMoveY\r\n          ? sorted[i].x === sorted[i - 1]?.x\r\n          : sorted[i].y === sorted[i - 1]?.y)\r\n      ) {\r\n        if (isMoveY) {\r\n          sorted[i].y = nextPos;\r\n        } else {\r\n          sorted[i].x = nextPos;\r\n        }\r\n        nextPos += isMinus ? 1 : -1;\r\n      } else {\r\n        nextPos = 0;\r\n      }\r\n  \r\n      if (\r\n        (isMoveY\r\n          ? sorted[i].x === sorted[i + 1]?.x\r\n          : sorted[i].y === sorted[i + 1]?.y) &&\r\n        sorted[i].value === sorted[i + 1]?.value\r\n      ) {\r\n        const tile = makeTile();\r\n        tile.x = sorted[i].x;\r\n        tile.y = sorted[i].y;\r\n        tile.isMerged = true;\r\n        tile.value = sorted[i].value * 2;\r\n        newtileSet.push(tile);\r\n        sorted[i].isDisabled = true;\r\n        sorted[i + 1].isDisabled = true;\r\n        if (isMoveY) {\r\n          nextPos = sorted[i + 1].y;\r\n          sorted[i + 1].y = sorted[i].y;\r\n        } else {\r\n          nextPos = sorted[i + 1].x;\r\n          sorted[i + 1].x = sorted[i].x;\r\n        }\r\n      }\r\n    }\r\n    return newtileSet;\r\n  }","export const GridSize = 4","export const assert = function (condition, message) {\r\n    if (!condition) {\r\n      throw new Error(`Assertion failed: ${message}`);\r\n    }\r\n  };","import hotkeys from \"hotkeys-js\"\r\n\r\nconst observerMap = {};\r\n\r\nexport function addKeyObserver(key, callback) {\r\n    if (!observerMap[key]) {\r\n        observerMap[key] = [];\r\n        hotkeys(key, () => executeCallback(key));\r\n    }\r\n\r\n    observerMap[key].push(callback);\r\n}\r\n\r\nexport function removekeyObserver(key, callback) {\r\n    if (observerMap[key]) {\r\n        observerMap[key] = observerMap[key].filter(item => item !== callback);\r\n    }\r\n}\r\n\r\nfunction executeCallback(key) {\r\n    for (const callback of observerMap[key]) {\r\n        callback();\r\n    }\r\n}","import React from 'react'\r\nimport times from 'lodash/times'\r\nimport { useState } from 'react'\r\n\r\nimport { GridSize } from '../constant'\r\nimport { getNewTileSet } from '../logic/tile'\r\n\r\nimport './game.css'\r\nimport useMoveTile from '../logic/hook/moveTile'\r\n\r\nfunction GridSlot() {\r\n    return (<div className='grid-slot'>1</div>)\r\n}\r\n\r\nexport default function Game(props) {\r\n    const [tileSet, setTileContext] = useState(getNewTileSet);\r\n\r\n    //console.log(tileSet);\r\n\r\n    useMoveTile(tileSet, setTileContext);\r\n\r\n    const staticGridContainer = (\r\n        <div className='grid-container'>\r\n            {times(GridSize, (i) => (\r\n                <div className='grid-row' key={i}>\r\n                    {times(GridSize, (j) => (\r\n                        <GridSlot key={j}></GridSlot>\r\n                    ))}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n\r\n    const dynamicTileContainer = (\r\n        <div className='tile-container'>\r\n            {times(GridSize, (i) => (\r\n                <div className='grid-row' key={i}>\r\n                    {times(GridSize, (j) => {\r\n                        let matchItems = tileSet.filter(item => item.x === (i + 1) && item.y === (j + 1))\r\n                        if (matchItems && matchItems.length > 0) {\r\n                            for (const item of matchItems) {\r\n                                if (!item.isDisabled) {\r\n                                    return (<div className={`tile-slot tile-value-${item.value}`} key={j}>\r\n                                        1\r\n                                        <div className={`tile-content tile-value-${item.value} tile-value-text`}>\r\n                                            {item.value}\r\n                                        </div>\r\n                                    </div>);\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            return (<div className='tile-slot tile-empty' key={j}>1</div>);\r\n                        }\r\n                    })}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div className='game-container'>\r\n            {staticGridContainer}\r\n            {dynamicTileContainer}\r\n        </div>\r\n    )\r\n}\r\n","import { addKeyObserver, removekeyObserver } from \"../input\"\r\nimport { useEffect } from \"react\";\r\nimport { makeTile, moveTile } from '../tile'\r\n\r\n\r\nexport default function useMoveTile(tileSet, setTileContext) {\r\n    useEffect(() => {\r\n        const moveAndAdd = ({x, y}) => {\r\n            const newTileSet = moveTile({tileSet, x, y});\r\n\r\n            const newTile = makeTile(newTileSet);\r\n            newTileSet.push(newTile);\r\n            newTile.isNew = true;\r\n\r\n            setTileContext(newTileSet);\r\n        }\r\n\r\n        const moveLeft = () => moveAndAdd({x:-1, y:0});\r\n        const moveRight = () => moveAndAdd({x:1, y:0});\r\n        const moveUp = () => moveAndAdd({x:0, y:-1});\r\n        const moveDown = () => moveAndAdd({x:0, y:1});\r\n\r\n        addKeyObserver('up', moveLeft);\r\n        addKeyObserver('down', moveRight);\r\n        addKeyObserver('left', moveUp);\r\n        addKeyObserver('right', moveDown);\r\n\r\n        return () => {\r\n            removekeyObserver('up', moveLeft);\r\n            removekeyObserver('down', moveRight);\r\n            removekeyObserver('left', moveUp);\r\n            removekeyObserver('right', moveDown);\r\n            }\r\n    })//, [input])\r\n}","import './App.css';\nimport Header from './components/header';\nimport Game from './components/game';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}